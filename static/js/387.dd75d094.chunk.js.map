{"version":3,"file":"static/js/387.dd75d094.chunk.js","mappings":"kRAGaA,EAAaC,EAAAA,EAAAA,GAAH,0EAMVC,EAAaD,EAAAA,EAAAA,GAAH,gDAIVE,EAASF,EAAAA,EAAAA,GAAH,mEAKNG,EAAgBH,EAAAA,EAAAA,EAAH,0DAKbI,EAAaJ,EAAAA,EAAAA,EAAH,sF,kBCgCvB,EA1CgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAiB,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBJ,GAFrB,OAEhBK,EAFgB,OAGtBN,EAAWM,EAAaC,SAHF,gDAKtBC,QAAQC,MAAR,MALsB,yDAAH,qDASvBL,GAXoB,CAYrB,GAAE,CAACH,IAMJ,OAAuB,IAAnBF,EAAQW,QACH,0DAIP,SAAClB,EAAD,UACGO,EAAQY,KAAI,SAAAC,GAAM,OACjB,UAAClB,EAAD,YACE,SAACC,EAAD,UAASiB,EAAOC,UAChB,SAACjB,EAAD,UAAgBgB,EAAOE,WACvB,UAACjB,EAAD,uBAdWkB,EAcqBH,EAAOI,YAbtCC,EAAAA,EAAAA,GAAO,IAAIC,KAAKH,GAAW,0BAUbH,EAAOO,IAXX,IAAAJ,CAUI,KASxB,C,wMCjDKK,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAA,kEAErBN,GAJ2B,cAEvBO,EAFuB,yBAMtBA,GANsB,gCAQ7BnB,QAAQC,MAAR,MAR6B,yDAAH,qDAYjBmB,EAAY,mCAAG,WAAMC,GAAN,gGAEDH,EAAAA,EAAAA,IACrB,6CADqB,kBAGhBN,GAHgB,IAInBU,OAAQ,CACND,MAAOA,MAPW,cAElBF,EAFkB,yBAWjBA,GAXiB,gCAaxBnB,QAAQC,MAAR,MAbwB,yDAAH,sDAiBZsB,EAAe,mCAAG,WAAM9B,GAAN,gGAEJyB,EAAAA,EAAAA,IAAA,6CACiBzB,EADjB,YAErBmB,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASK,MANW,sCAQ3BxB,QAAQC,MAAR,MAR2B,8DAAH,sDAafJ,EAAe,mCAAG,WAAMJ,GAAN,gGAEJyB,EAAAA,EAAAA,IAAA,6CACiBzB,EADjB,YAErBmB,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASK,MANW,sCAQ3BxB,QAAQC,MAAR,MAR2B,8DAAH,sDAafwB,EAAe,mCAAG,WAAMhC,GAAN,gGAEJyB,EAAAA,EAAAA,IAAA,6CACiBzB,GACtCmB,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASK,MANW,sCAQ3BxB,QAAQC,MAAR,MAR2B,8DAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const Author = styled.h3`\n  font-size: 18px;\n  margin-bottom: 5px;\n`;\n\nexport const ReviewContent = styled.p`\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const ReviewDate = styled.p`\n  font-size: 14px;\n  font-weight: bold;\n  margin-top: 5px;\n`;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { format } from 'date-fns';\n\nimport {\n  ReviewList,\n  ReviewItem,\n  Author,\n  ReviewContent,\n  ReviewDate,\n} from './Reviews.styled';\nimport { getMovieReviews } from '../services/Api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieReviews = async () => {\n      try {\n        const movieReviews = await getMovieReviews(movieId);\n        setReviews(movieReviews.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  const formatDate = datetime => {\n    return format(new Date(datetime), 'yyyy.MM.dd HH:mm');\n  };\n\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews yet</p>;\n  }\n\n  return (\n    <ReviewList>\n      {reviews.map(review => (\n        <ReviewItem key={review.id}>\n          <Author>{review.author}</Author>\n          <ReviewContent>{review.content}</ReviewContent>\n          <ReviewDate>Posted: {formatDate(review.created_at)}</ReviewDate>\n        </ReviewItem>\n      ))}\n    </ReviewList>\n  );\n};\n\n// No props to validate\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MDg2OTc5NGZkZmMyODViY2Q4OTk5YWM4ZjhlZDY5NCIsInN1YiI6IjY0NzhkNWFjZTMyM2YzMDEwNjEzZjQyZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8ZwiqsRjhmlATbQAdNY8YOqQ1qflDVBY7GKCwf12-sE',\n  },\n};\n\nexport const trendingWeekQuery = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?language=en-US`,\n      options\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        ...options,\n        params: {\n          query: query,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n"],"names":["ReviewList","styled","ReviewItem","Author","ReviewContent","ReviewDate","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","getMovieReviews","movieReviews","results","console","error","length","map","review","author","content","datetime","created_at","format","Date","id","options","method","headers","accept","Authorization","trendingWeekQuery","axios","response","searchMovies","query","params","getMovieCredits","data","getMovieDetails"],"sourceRoot":""}