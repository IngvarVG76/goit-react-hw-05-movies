{"version":3,"file":"static/js/72.47dbb5eb.chunk.js","mappings":"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","sources":["components/services/Api.js","pages/MovieDetailPage/MovieDetailPage.styled.jsx","pages/MovieDetailPage/MovieDetailPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MDg2OTc5NGZkZmMyODViY2Q4OTk5YWM4ZjhlZDY5NCIsInN1YiI6IjY0NzhkNWFjZTMyM2YzMDEwNjEzZjQyZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8ZwiqsRjhmlATbQAdNY8YOqQ1qflDVBY7GKCwf12-sE',\n  },\n};\n\nexport const trendingWeekQuery = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?language=en-US`,\n      options\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        ...options,\n        params: {\n          query: query,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  padding: 16px;\n`;\n\nexport const BackLink = styled(Link)`\n  color: #007bff;\n  text-decoration: none;\n  font-size: 18px;\n  margin-bottom: 16px;\n  display: block;\n`;\n\nexport const MovieDetails = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n\n  img {\n    max-width: 300px;\n    margin-right: 16px;\n  }\n\n  h1 {\n    font-size: 24px;\n    margin: 0;\n  }\n`;\n\nexport const Overview = styled.p`\n  font-size: 16px;\n  font-weight: 200;\n  line-height: 1.6;\n  margin-bottom: 16px;\n`;\n\nexport const GenresList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  li {\n    display: inline;\n    margin-right: 8px;\n    font-size: 16px;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const AdditionalInfo = styled.ul`\n  display: flex;\n  gap: 10px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  li {\n    margin-bottom: 8px;\n\n    a {\n      color: #007bff;\n      text-decoration: none;\n      font-size: 16px;\n    }\n  }\n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation, useParams, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nimport {\n  Main,\n  BackLink,\n  MovieDetails,\n  Overview,\n  GenresList,\n  AdditionalInfo,\n} from './MovieDetailPage.styled';\n\nimport { getMovieDetails } from '../../components/services/Api';\n\nconst defaultImg = 'https://www.tgv.com.my/assets/images/404/movie-poster.jpg';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetails = async () => {\n      try {\n        const movieData = await getMovieDetails(movieId);\n        setMovie(movieData);\n      } catch (error) {\n        console.error(error);\n      } finally {\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  return (\n    <Main>\n      <BackLink to={backLink.current}>‚Üê Go back</BackLink>\n      <MovieDetails>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : defaultImg\n          }\n          alt={title}\n        />\n        <div>\n          <h1>{`${title} (${release_date.substring(0, 4)})`}</h1>\n          <p>User score: {Math.round(vote_average * 10)}%</p>\n          <Overview>{overview}</Overview>\n          <GenresList>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </GenresList>\n        </div>\n      </MovieDetails>\n      <div>\n        <h2>Additional information</h2>\n        <AdditionalInfo>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </AdditionalInfo>\n        <Suspense fallback={<p>Loading...</p>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </Main>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["options","method","headers","accept","Authorization","trendingWeekQuery","axios","response","console","error","searchMovies","query","params","getMovieCredits","movieId","data","getMovieReviews","getMovieDetails","Main","styled","BackLink","Link","MovieDetails","Overview","GenresList","AdditionalInfo","useState","movie","setMovie","useParams","location","useLocation","backLink","useRef","state","from","useEffect","fetchMovieDetails","movieData","poster_path","title","release_date","vote_average","overview","genres","to","current","src","alt","substring","Math","round","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}