{"version":3,"file":"static/js/186.afca1cc9.chunk.js","mappings":"kOA+CA,UAzCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,IAhBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAiB,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBJ,GAFrB,OAEhBK,EAFgB,OAGtBN,EAAWM,EAAaC,SACxBC,QAAQC,IAAIH,EAAaC,SAJH,gDAMtBC,QAAQE,MAAR,MANsB,yDAAH,qDAUvBN,GAZoB,CAarB,GAAE,CAACH,IAEmB,IAAnBF,EAAQY,OACV,OAAO,wCAOT,OACE,wBACGZ,EAAQa,KAAI,SAAAC,GAAM,OACjB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,WACX,qCAVWC,EAUYH,EAAOI,YAT7BC,EAAAA,EAAAA,GAAO,IAAIC,KAAKH,GAAW,0BAMrBH,EAAOO,IAPH,IAAAJ,CAMI,KASxB,C,wMC3CKK,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAA,kEAErBN,GAJ2B,cAEvBO,EAFuB,yBAMtBA,GANsB,gCAQ7BpB,QAAQE,MAAR,MAR6B,yDAAH,qDAYjBmB,EAAY,mCAAG,WAAMC,GAAN,gGAEDH,EAAAA,EAAAA,IACrB,6CADqB,kBAGhBN,GAHgB,IAInBU,OAAQ,CACND,MAAOA,MAPW,cAElBF,EAFkB,yBAWjBA,GAXiB,gCAaxBpB,QAAQE,MAAR,MAbwB,yDAAH,sDAiBZsB,EAAe,mCAAG,WAAM/B,GAAN,gGAEJ0B,EAAAA,EAAAA,IAAA,6CACiB1B,EADjB,YAErBoB,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASK,MANW,sCAQ3BzB,QAAQE,MAAR,MAR2B,8DAAH,sDAafL,EAAe,mCAAG,WAAMJ,GAAN,gGAEJ0B,EAAAA,EAAAA,IAAA,6CACiB1B,EADjB,YAErBoB,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASK,MANW,sCAQ3BzB,QAAQE,MAAR,MAR2B,8DAAH,sDAafwB,EAAe,mCAAG,WAAMjC,GAAN,gGAEJ0B,EAAAA,EAAAA,IAAA,6CACiB1B,GACtCoB,GAJyB,cAErBO,EAFqB,yBAOpBA,EAASK,MAPW,sCAS3BzB,QAAQE,MAAR,MAT2B,8DAAH,qD","sources":["components/Reviews/Reviews.jsx","components/services/Api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { format } from 'date-fns';\n\nimport { getMovieReviews } from '../services/Api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieReviews = async () => {\n      try {\n        const movieReviews = await getMovieReviews(movieId);\n        setReviews(movieReviews.results);\n        console.log(movieReviews.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return <div>Loading...</div>;\n  }\n\n  const formatDate = datetime => {\n    return format(new Date(datetime), 'yyyy.MM.dd HH:mm');\n  };\n\n  return (\n    <ul>\n      {reviews.map(review => (\n        <li key={review.id}>\n          <h3>{review.author}</h3>\n          <p>{review.content}</p>\n          <p>Posted: {formatDate(review.created_at)}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MDg2OTc5NGZkZmMyODViY2Q4OTk5YWM4ZjhlZDY5NCIsInN1YiI6IjY0NzhkNWFjZTMyM2YzMDEwNjEzZjQyZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8ZwiqsRjhmlATbQAdNY8YOqQ1qflDVBY7GKCwf12-sE',\n  },\n};\n\nexport const trendingWeekQuery = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?language=en-US`,\n      options\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        ...options,\n        params: {\n          query: query,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      options\n    );\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","getMovieReviews","movieReviews","results","console","log","error","length","map","review","author","content","datetime","created_at","format","Date","id","options","method","headers","accept","Authorization","trendingWeekQuery","axios","response","searchMovies","query","params","getMovieCredits","data","getMovieDetails"],"sourceRoot":""}