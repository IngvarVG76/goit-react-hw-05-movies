{"version":3,"file":"static/js/247.e83b0f69.chunk.js","mappings":"yNA+CA,UAzCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAc,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBJ,GAFrB,OAEbK,EAFa,OAGnBN,EAAQM,EAAUP,MAClBQ,QAAQC,IAAIF,EAAUP,MAJH,gDAMnBQ,QAAQE,MAAR,MANmB,yDAAH,qDAUpBL,GAZoB,CAarB,GAAE,CAACH,IAEgB,IAAhBF,EAAKW,QACA,yCAKP,wBACGX,EAAKY,KAAI,SAAAC,GAAK,OACb,2BACE,oCAAYA,EAAMC,SAClB,gBACEC,IAAG,0CAAqCF,EAAMG,cAC9CC,IAAKJ,EAAMC,QAEb,gCAAQD,EAAMK,eANPL,EAAMM,GADF,KAYpB,C,wMC3CKC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAA,kEAErBN,GAJ2B,cAEvBO,EAFuB,yBAMtBA,GANsB,gCAQ7BnB,QAAQE,MAAR,MAR6B,yDAAH,qDAYjBkB,EAAY,mCAAG,WAAMC,GAAN,gGAEDH,EAAAA,EAAAA,IACrB,6CADqB,kBAGhBN,GAHgB,IAInBU,OAAQ,CACND,MAAOA,MAPW,cAElBF,EAFkB,yBAWjBA,GAXiB,gCAaxBnB,QAAQE,MAAR,MAbwB,yDAAH,sDAiBZJ,EAAe,mCAAG,WAAMJ,GAAN,gGAEJwB,EAAAA,EAAAA,IAAA,6CACiBxB,EADjB,YAErBkB,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASI,MANW,sCAQ3BvB,QAAQE,MAAR,MAR2B,8DAAH,sDAafsB,EAAe,mCAAG,WAAM9B,GAAN,gGAEJwB,EAAAA,EAAAA,IAAA,6CACiBxB,EADjB,YAErBkB,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASI,MANW,sCAQ3BvB,QAAQE,MAAR,MAR2B,8DAAH,sDAafuB,EAAe,mCAAG,WAAM/B,GAAN,gGAEJwB,EAAAA,EAAAA,IAAA,6CACiBxB,GACtCkB,GAJyB,cAErBO,EAFqB,yBAOpBA,EAASI,MAPW,sCAS3BvB,QAAQE,MAAR,MAT2B,8DAAH,qD","sources":["components/Cast/Cast.jsx","components/services/Api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n// import { format } from 'date-fns';\n\nimport { getMovieCredits } from '../services/Api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieCast = async () => {\n      try {\n        const movieCast = await getMovieCredits(movieId);\n        setCast(movieCast.cast);\n        console.log(movieCast.cast);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  if (cast.length === 0) {\n    return <div>Loading...</div>;\n  }\n\n\n  return (\n    <ul>\n      {cast.map(actor => (\n        <li key={actor.id}>\n          <h3>Actor: {actor.name}</h3>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n            alt={actor.name}\n          />\n          <p>As: {actor.character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MDg2OTc5NGZkZmMyODViY2Q4OTk5YWM4ZjhlZDY5NCIsInN1YiI6IjY0NzhkNWFjZTMyM2YzMDEwNjEzZjQyZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8ZwiqsRjhmlATbQAdNY8YOqQ1qflDVBY7GKCwf12-sE',\n  },\n};\n\nexport const trendingWeekQuery = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?language=en-US`,\n      options\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        ...options,\n        params: {\n          query: query,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      options\n    );\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCast","getMovieCredits","movieCast","console","log","error","length","map","actor","name","src","profile_path","alt","character","id","options","method","headers","accept","Authorization","trendingWeekQuery","axios","response","searchMovies","query","params","data","getMovieReviews","getMovieDetails"],"sourceRoot":""}