{"version":3,"file":"static/js/750.8456563f.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/services/Api.js","pages/MoviesPage/MoviesPage.styled.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 5px;\n`;\n\nexport const NoMoviesFound = styled.p`\n  font-weight: bold;\n`;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { List, ListItem, NoMoviesFound } from './MoviesList.styled';\n\nconst MoviesList = ({ movies, location, searchName }) => {\n  if (movies.length === 0 && searchName) {\n    return <NoMoviesFound>No movies found</NoMoviesFound>;\n  }\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <ListItem key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  searchName: PropTypes.string,\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MDg2OTc5NGZkZmMyODViY2Q4OTk5YWM4ZjhlZDY5NCIsInN1YiI6IjY0NzhkNWFjZTMyM2YzMDEwNjEzZjQyZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8ZwiqsRjhmlATbQAdNY8YOqQ1qflDVBY7GKCwf12-sE',\n  },\n};\n\nexport const trendingWeekQuery = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?language=en-US`,\n      options\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        ...options,\n        params: {\n          query: query,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  padding: 16px;\n`;","import styled from '@emotion/styled';\n\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 10px;\n  margin-right: 10px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  min-width: 200px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: none;\n  background-color: #007bff;\n  color: #fff;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form, Input, Button } from './SearchForm.styled';\n\nconst SearchForm = ({ value, onSubmit, onChange }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        required\n        placeholder=\"Search movies...\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  value: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { Main } from './MoviesPage.styled';\nimport { searchMovies } from '../../components/services/Api';\n\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport MoviesList from '../../components/MoviesList/MoviesList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchName = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    const getSearchResults = async () => {\n      try {\n        const response = await searchMovies(searchName);\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getSearchResults();\n  }, [searchName]);\n\n  const updateQueryString = name => {\n    const nextParams = name.trim() !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleSearchSubmit = searchValue => {\n    setSearchParams({ name: searchValue });\n  };\n\n  return (\n    <Main>\n      <SearchForm\n        onSubmit={handleSearchSubmit}\n        value={searchName}\n        onChange={updateQueryString}\n      />\n        <MoviesList\n          movies={movies}\n          location={location}\n          searchName={searchName}\n        />\n    </Main>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["List","styled","ListItem","NoMoviesFound","movies","location","searchName","length","map","movie","to","id","state","from","title","options","method","headers","accept","Authorization","trendingWeekQuery","axios","response","console","error","searchMovies","query","params","getMovieCredits","movieId","data","getMovieReviews","getMovieDetails","Main","Form","Input","Button","value","onSubmit","onChange","event","preventDefault","type","required","placeholder","e","target","useState","setMovies","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","getSearchResults","results","searchValue","name","nextParams","trim","MoviesList"],"sourceRoot":""}