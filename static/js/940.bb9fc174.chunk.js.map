{"version":3,"file":"static/js/940.bb9fc174.chunk.js","mappings":"wTAEMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAA,kEAErBN,GAJ2B,cAEvBO,EAFuB,yBAMtBA,GANsB,gCAQ7BC,QAAQC,MAAR,MAR6B,yDAAH,qDAYjBC,EAAY,mCAAG,WAAMC,GAAN,gGAEDL,EAAAA,EAAAA,IACrB,6CADqB,kBAGhBN,GAHgB,IAInBY,OAAQ,CACND,MAAOA,MAPW,cAElBJ,EAFkB,yBAWjBA,GAXiB,gCAaxBC,QAAQC,MAAR,MAbwB,yDAAH,sDAiBZI,EAAe,mCAAG,WAAMC,GAAN,gGAEJR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,YAErBd,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASQ,MANW,sCAQ3BP,QAAQC,MAAR,MAR2B,8DAAH,sDAafO,EAAe,mCAAG,WAAMF,GAAN,gGAEJR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,YAErBd,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASQ,MANW,sCAQ3BP,QAAQC,MAAR,MAR2B,8DAAH,sDAafQ,EAAe,mCAAG,WAAMH,GAAN,gGAEJR,EAAAA,EAAAA,IAAA,6CACiBQ,GACtCd,GAJyB,cAErBO,EAFqB,yBAOpBA,EAASQ,MAPW,sCAS3BP,QAAQC,MAAR,MAT2B,8DAAH,qD,iHCA5B,UA7DyB,WAAO,IAAD,IAC7B,GAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QACFQ,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAmBpD,IAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAKd,EAAL,CAEA,IAAMe,EAAiB,mCAAG,8GAEEZ,EAAAA,EAAAA,IAAgBH,GAFlB,OAEhBgB,EAFgB,OAGtBV,EAASU,GACTtB,QAAQuB,IAAID,GAJU,gDAMtBtB,QAAQC,MAAR,MANsB,qGAAH,qDAWvBoB,GAboB,CAcrB,GAAE,CAACf,KAECK,EACH,OAAO,wCAGT,IAAQa,EACNb,EADMa,YAAaC,EACnBd,EADmBc,MAAOC,EAC1Bf,EAD0Be,aAAcC,EACxChB,EADwCgB,aAAcC,EACtDjB,EADsDiB,SAAUC,EAChElB,EADgEkB,OAGlE,OACE,4BACE,SAAC,KAAD,CAAMC,GAAId,EAAae,QAAvB,sBACA,4BACE,gBACEC,IAAG,0CAAqCR,GACxCS,IAAKR,KAEP,kCAAQA,EAAR,aAAkBC,EAAaQ,UAAU,EAAG,GAA5C,QACA,wCAAgBC,KAAKC,MAAqB,GAAfT,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,EAAOQ,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,YAE3C,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMV,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,SAIP,C","sources":["components/services/Api.js","pages/MovieDetailPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MDg2OTc5NGZkZmMyODViY2Q4OTk5YWM4ZjhlZDY5NCIsInN1YiI6IjY0NzhkNWFjZTMyM2YzMDEwNjEzZjQyZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8ZwiqsRjhmlATbQAdNY8YOqQ1qflDVBY7GKCwf12-sE',\n  },\n};\n\nexport const trendingWeekQuery = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?language=en-US`,\n      options\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        ...options,\n        params: {\n          query: query,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      options\n    );\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation, useParams, Outlet } from 'react-router-dom';\n\nimport { getMovieDetails } from '../components/services/Api';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? \"/\");\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetails = async () => {\n      try {\n        const movieData = await getMovieDetails(movieId);\n        setMovie(movieData);\n        console.log(movieData);\n      } catch (error) {\n        console.error(error);\n      } finally {\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  return (\n    <div>\n      <Link to={backLinkHref.current}>Go back</Link>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title}\n        />\n        <h1>{`${title} (${release_date.substring(0, 4)})`}</h1>\n        <p>User score: {Math.round(vote_average * 10)}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        <p>{genres.map(genre => genre.name).join(', ')}</p>\n      </div>\n      <div>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["options","method","headers","accept","Authorization","trendingWeekQuery","axios","response","console","error","searchMovies","query","params","getMovieCredits","movieId","data","getMovieReviews","getMovieDetails","useState","movie","setMovie","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchMovieDetails","movieData","log","poster_path","title","release_date","vote_average","overview","genres","to","current","src","alt","substring","Math","round","map","genre","name","join"],"sourceRoot":""}