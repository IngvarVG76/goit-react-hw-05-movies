{"version":3,"file":"static/js/196.748fce2b.chunk.js","mappings":"wTAEMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAA,kEAErBN,GAJ2B,cAEvBO,EAFuB,yBAMtBA,GANsB,gCAQ7BC,QAAQC,MAAR,MAR6B,yDAAH,qDAYjBC,EAAY,mCAAG,WAAMC,GAAN,gGAEDL,EAAAA,EAAAA,IACrB,6CADqB,kBAGhBN,GAHgB,IAInBY,OAAQ,CACND,MAAOA,MAPW,cAElBJ,EAFkB,yBAWjBA,GAXiB,gCAaxBC,QAAQC,MAAR,MAbwB,yDAAH,sDAiBZI,EAAe,mCAAG,WAAMC,GAAN,gGAEJR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,YAErBd,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASQ,MANW,sCAQ3BP,QAAQC,MAAR,MAR2B,8DAAH,sDAafO,EAAe,mCAAG,WAAMF,GAAN,gGAEJR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,YAErBd,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASQ,MANW,sCAQ3BP,QAAQC,MAAR,MAR2B,8DAAH,sDAafQ,EAAe,mCAAG,WAAMH,GAAN,gGAEJR,EAAAA,EAAAA,IAAA,6CACiBQ,GACtCd,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASQ,MANW,sCAQ3BP,QAAQC,MAAR,MAR2B,8DAAH,qD,+JChEfS,EAAOC,EAAAA,EAAAA,KAAH,0C,SCCJC,EAAOD,EAAAA,EAAAA,KAAH,gDAIJE,EAAQF,EAAAA,EAAAA,MAAH,4IAQLG,EAASH,EAAAA,EAAAA,OAAH,wJ,SCgBnB,EA1BmB,SAAC,GAAmC,IAAjCI,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAMrC,OACE,UAACL,EAAD,CAAMI,SANa,SAAAE,GACnBA,EAAMC,iBACNH,EAASD,EACV,EAGC,WACE,SAACF,EAAD,CACEO,KAAK,OACLC,UAAQ,EACRC,YAAY,mBACZP,MAAOA,EACPE,SAAU,SAAAM,GAAC,OAAIN,EAASM,EAAEC,OAAOT,MAAtB,KAEb,SAACD,EAAD,CAAQM,KAAK,SAAb,sBAGL,ECfKK,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAgDxB,EA9CmB,WAAO,IAAD,EACvB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,eAApB,QAA+B,IAE/CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,8GAEEpC,EAAAA,EAAAA,IAAaiC,GAFf,OAEfpC,EAFe,OAGrB8B,EAAU9B,EAASQ,KAAKgC,SAHH,gDAKrBvC,QAAQC,MAAR,MALqB,yDAAH,qDAQtBqC,GACD,GAAE,CAACH,IAWJ,OACE,UAACzB,EAAD,YACE,SAAC,EAAD,CACEM,SAPqB,SAAAwB,GACzBN,EAAgB,CAAEO,KAAMD,GACzB,EAMKzB,MAAOoB,EACPlB,SAdoB,SAAAwB,GACxB,IAAMC,EAA6B,KAAhBD,EAAKE,OAAgB,CAAEF,KAAAA,GAAS,CAAC,EACpDP,EAAgBQ,EACjB,KAaG,UAAC,EAAAE,SAAD,CAAUC,UAAU,sCAApB,WACE,SAACpB,EAAD,CACEG,OAAQA,EACRE,SAAUA,EACVK,WAAYA,KAEd,SAAC,KAAD,SAIP,C","sources":["components/services/Api.js","pages/MoviesPage.styled.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MDg2OTc5NGZkZmMyODViY2Q4OTk5YWM4ZjhlZDY5NCIsInN1YiI6IjY0NzhkNWFjZTMyM2YzMDEwNjEzZjQyZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8ZwiqsRjhmlATbQAdNY8YOqQ1qflDVBY7GKCwf12-sE',\n  },\n};\n\nexport const trendingWeekQuery = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?language=en-US`,\n      options\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        ...options,\n        params: {\n          query: query,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  padding: 16px;\n`;","import styled from '@emotion/styled';\n\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 10px;\n  margin-right: 10px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  min-width: 200px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: none;\n  background-color: #007bff;\n  color: #fff;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form, Input, Button } from './SearchForm.styled';\n\nconst SearchForm = ({ value, onSubmit, onChange }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        required\n        placeholder=\"Search movies...\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  value: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams, Outlet } from 'react-router-dom';\nimport { Suspense, lazy } from 'react';\n\nimport { Main } from \"./MoviesPage.styled\";\nimport { searchMovies } from '../components/services/Api';\n\nimport SearchForm from '../components/SearchForm/SearchForm';\nconst MoviesList = lazy(() => import('../components/MoviesList/MoviesList'));\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchName = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    const getSearchResults = async () => {\n      try {\n        const response = await searchMovies(searchName);\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getSearchResults();\n  }, [searchName]);\n\n  const updateQueryString = name => {\n    const nextParams = name.trim() !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleSearchSubmit = searchValue => {\n    setSearchParams({ name: searchValue });\n  };\n\n  return (\n    <Main>\n      <SearchForm\n        onSubmit={handleSearchSubmit}\n        value={searchName}\n        onChange={updateQueryString}\n      />\n      <Suspense fallback={<p>Loading...</p>}>\n        <MoviesList\n          movies={movies}\n          location={location}\n          searchName={searchName}\n        />\n        <Outlet />\n      </Suspense>\n    </Main>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["options","method","headers","accept","Authorization","trendingWeekQuery","axios","response","console","error","searchMovies","query","params","getMovieCredits","movieId","data","getMovieReviews","getMovieDetails","Main","styled","Form","Input","Button","value","onSubmit","onChange","event","preventDefault","type","required","placeholder","e","target","MoviesList","lazy","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","searchName","get","useEffect","getSearchResults","results","searchValue","name","nextParams","trim","Suspense","fallback"],"sourceRoot":""}