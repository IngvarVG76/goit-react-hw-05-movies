{"version":3,"file":"static/js/736.6e7e05dd.chunk.js","mappings":"yQAGaA,EAAWC,EAAAA,EAAAA,GAAH,8HASRC,EAAWD,EAAAA,EAAAA,GAAH,iMASRE,EAAYF,EAAAA,EAAAA,GAAH,gEAKTG,EAAaH,EAAAA,EAAAA,IAAH,iFAMVI,EAAiBJ,EAAAA,EAAAA,EAAH,gE,kBC2B3B,EA7Ca,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAc,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBJ,GAFrB,OAEbK,EAFa,OAGnBN,EAAQM,EAAUP,MAHC,gDAKnBQ,QAAQC,MAAR,MALmB,yDAAH,qDASpBJ,GAXoB,CAYrB,GAAE,CAACH,IAEgB,IAAhBF,EAAKU,QACA,yDAIP,SAACjB,EAAD,UACGO,EAAKW,KAAI,SAAAC,GAAK,OACb,UAACjB,EAAD,YACE,SAACE,EAAD,CACEgB,IACED,EAAME,aAAN,0CACuCF,EAAME,cAhCxC,4DAmCPC,IAAKH,EAAMI,QAEb,SAACpB,EAAD,UAAYgB,EAAMI,QAClB,UAAClB,EAAD,kBAAqBc,EAAMK,eAVdL,EAAMM,GADR,KAgBpB,C,wMCrDKC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAA,kEAErBN,GAJ2B,cAEvBO,EAFuB,yBAMtBA,GANsB,gCAQ7BlB,QAAQC,MAAR,MAR6B,yDAAH,qDAYjBkB,EAAY,mCAAG,WAAMC,GAAN,gGAEDH,EAAAA,EAAAA,IACrB,6CADqB,kBAGhBN,GAHgB,IAInBU,OAAQ,CACND,MAAOA,MAPW,cAElBF,EAFkB,yBAWjBA,GAXiB,gCAaxBlB,QAAQC,MAAR,MAbwB,yDAAH,sDAiBZH,EAAe,mCAAG,WAAMJ,GAAN,gGAEJuB,EAAAA,EAAAA,IAAA,6CACiBvB,EADjB,YAErBiB,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASI,MANW,sCAQ3BtB,QAAQC,MAAR,MAR2B,8DAAH,sDAafsB,EAAe,mCAAG,WAAM7B,GAAN,gGAEJuB,EAAAA,EAAAA,IAAA,6CACiBvB,EADjB,YAErBiB,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASI,MANW,sCAQ3BtB,QAAQC,MAAR,MAR2B,8DAAH,sDAafuB,EAAe,mCAAG,WAAM9B,GAAN,gGAEJuB,EAAAA,EAAAA,IAAA,6CACiBvB,GACtCiB,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASI,MANW,sCAQ3BtB,QAAQC,MAAR,MAR2B,8DAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 200px;\n  background: linear-gradient(to right, #ffffff, #ece9e6);\n  border-radius: 4px;\n`;\n\nexport const ActorName = styled.h3`\n  font-size: 16px;\n  max-width: 100%;\n`;\n\nexport const ActorImage = styled.img`\n  width: 200px;\n  height: auto;\n  border-radius: 4px;\n`;\n\nexport const ActorCharacter = styled.p`\n  max-width: 100%;\n  font-size: 14px;\n`;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  CastList,\n  CastItem,\n  ActorName,\n  ActorImage,\n  ActorCharacter,\n} from './Cast.styled';\n\nimport { getMovieCredits } from '../services/Api';\n\nconst defaultImg = 'https://www.tgv.com.my/assets/images/404/movie-poster.jpg';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieCast = async () => {\n      try {\n        const movieCast = await getMovieCredits(movieId);\n        setCast(movieCast.cast);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  if (cast.length === 0) {\n    return <p>Cast currently not available</p>;\n  }\n\n  return (\n    <CastList>\n      {cast.map(actor => (\n        <CastItem key={actor.id}>\n          <ActorImage\n            src={\n              actor.profile_path\n                ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                : defaultImg\n            }\n            alt={actor.name}\n          />\n          <ActorName>{actor.name}</ActorName>\n          <ActorCharacter>As: {actor.character}</ActorCharacter>\n        </CastItem>\n      ))}\n    </CastList>\n  );\n};\n\n// No props to validate\n\nexport default Cast;\n","import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MDg2OTc5NGZkZmMyODViY2Q4OTk5YWM4ZjhlZDY5NCIsInN1YiI6IjY0NzhkNWFjZTMyM2YzMDEwNjEzZjQyZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8ZwiqsRjhmlATbQAdNY8YOqQ1qflDVBY7GKCwf12-sE',\n  },\n};\n\nexport const trendingWeekQuery = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?language=en-US`,\n      options\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        ...options,\n        params: {\n          query: query,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n"],"names":["CastList","styled","CastItem","ActorName","ActorImage","ActorCharacter","useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCast","getMovieCredits","movieCast","console","error","length","map","actor","src","profile_path","alt","name","character","id","options","method","headers","accept","Authorization","trendingWeekQuery","axios","response","searchMovies","query","params","data","getMovieReviews","getMovieDetails"],"sourceRoot":""}