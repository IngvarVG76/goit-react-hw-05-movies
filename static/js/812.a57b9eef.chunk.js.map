{"version":3,"file":"static/js/812.a57b9eef.chunk.js","mappings":"iNAEaA,EAAOC,EAAAA,EAAAA,GAAH,4DAKJC,EAAWD,EAAAA,EAAAA,GAAH,+CAIRE,EAAgBF,EAAAA,EAAAA,EAAH,8C,SCuB1B,EA5BmB,SAAC,GAAsC,IAApCG,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WACtC,OAAsB,IAAlBF,EAAOG,QAAgBD,GAClB,SAACH,EAAD,+BAIP,SAACH,EAAD,UACGI,EAAOI,KAAI,SAAAC,GAAK,OACf,SAACP,EAAD,WACE,SAAC,KAAD,CAAMQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,SACGI,EAAMK,SAFIL,EAAME,GADN,KAStB,C,wMCpBKI,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAA,kEAErBN,GAJ2B,cAEvBO,EAFuB,yBAMtBA,GANsB,gCAQ7BC,QAAQC,MAAR,MAR6B,yDAAH,qDAYjBC,EAAY,mCAAG,WAAMC,GAAN,gGAEDL,EAAAA,EAAAA,IACrB,6CADqB,kBAGhBN,GAHgB,IAInBY,OAAQ,CACND,MAAOA,MAPW,cAElBJ,EAFkB,yBAWjBA,GAXiB,gCAaxBC,QAAQC,MAAR,MAbwB,yDAAH,sDAiBZI,EAAe,mCAAG,WAAMC,GAAN,gGAEJR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,YAErBd,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASQ,MANW,sCAQ3BP,QAAQC,MAAR,MAR2B,8DAAH,sDAafO,EAAe,mCAAG,WAAMF,GAAN,gGAEJR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,YAErBd,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASQ,MANW,sCAQ3BP,QAAQC,MAAR,MAR2B,8DAAH,sDAafQ,EAAe,mCAAG,WAAMH,GAAN,gGAEJR,EAAAA,EAAAA,IAAA,6CACiBQ,GACtCd,GAJyB,cAErBO,EAFqB,yBAMpBA,EAASQ,MANW,sCAQ3BP,QAAQC,MAAR,MAR2B,8DAAH,qD,0IChEfS,EAAOhC,EAAAA,EAAAA,KAAH,0CAIJiC,EAAUjC,EAAAA,EAAAA,GAAH,0F,2BCwBpB,EAxBiB,WACf,OAA4BkC,EAAAA,EAAAA,UAAS,IAArC,eAAO/B,EAAP,KAAegC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,8GAEDlB,EAAAA,EAAAA,MAFC,OAElBE,EAFkB,OAGxBc,EAAUd,EAASQ,KAAKS,SAHA,gDAKxBhB,QAAQC,MAAR,MALwB,yDAAH,qDASzBc,GACD,GAAE,KAGD,UAACL,EAAD,YACE,SAACC,EAAD,+BACA,SAACM,EAAA,EAAD,CAAYpC,OAAQA,MAGzB,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/services/Api.js","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 5px;\n`;\n\nexport const NoMoviesFound = styled.p`\n  font-weight: bold;\n`;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { List, ListItem, NoMoviesFound } from './MoviesList.styled';\n\nconst MoviesList = ({ movies, location, searchName }) => {\n  if (movies.length === 0 && searchName) {\n    return <NoMoviesFound>No movies found</NoMoviesFound>;\n  }\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <ListItem key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  searchName: PropTypes.string,\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MDg2OTc5NGZkZmMyODViY2Q4OTk5YWM4ZjhlZDY5NCIsInN1YiI6IjY0NzhkNWFjZTMyM2YzMDEwNjEzZjQyZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8ZwiqsRjhmlATbQAdNY8YOqQ1qflDVBY7GKCwf12-sE',\n  },\n};\n\nexport const trendingWeekQuery = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?language=en-US`,\n      options\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        ...options,\n        params: {\n          query: query,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  padding: 16px;\n`;\n\nexport const Heading = styled.h2`\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 16px;\n`;","import React, { useEffect, useState } from 'react';\n\nimport { Main, Heading } from './HomePage.styled';\nimport { trendingWeekQuery } from '../../components/services/Api';\nimport MoviesList from '../../components/MoviesList/MoviesList';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const response = await trendingWeekQuery();\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <Main>\n      <Heading>Trending Movies</Heading>\n      <MoviesList movies={movies} />\n    </Main>\n  );\n};\n\nexport default HomePage;\n"],"names":["List","styled","ListItem","NoMoviesFound","movies","location","searchName","length","map","movie","to","id","state","from","title","options","method","headers","accept","Authorization","trendingWeekQuery","axios","response","console","error","searchMovies","query","params","getMovieCredits","movieId","data","getMovieReviews","getMovieDetails","Main","Heading","useState","setMovies","useEffect","fetchTrendingMovies","results","MoviesList"],"sourceRoot":""}